<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on 寻心之旅</title><link>/tags/golang/</link><description>Recent content in Golang on 寻心之旅</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 01 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>2024开年篇</title><link>/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/</guid><description>&lt;img src="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/new_year.jpg" alt="Featured image of post 2024开年篇" />&lt;p>新年开启第一篇博客，作为2024开局准备养成的一个习惯。从github的近况开始聊起，近期把荒废已久的代码再捡起来，慢慢再找到心流的状态，在浮躁的社会习气下找回自我，权把2024当作修心的起始。&lt;/p>
&lt;p>&lt;img src="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/github.jpg"
width="800"
height="217"
srcset="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/github_hu0ffa14013b754a796ad939d7560fd845_38860_480x0_resize_q75_box.jpg 480w, /p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/github_hu0ffa14013b754a796ad939d7560fd845_38860_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="368"
data-flex-basis="884px"
>&lt;/p>
&lt;p>考虑到要为以后的退休生活铺路，准备开始试水一些小产品。天下难事，必作于易；天下大事，必作于细。那么就先从最基础脚手架选型，从一些开源项目开始。&lt;/p>
&lt;p>目前前端（管理后台）的选型来自于 &lt;a class="link" href="https://github.com/southliu/react-admin" target="_blank" rel="noopener"
>southliu/react-admin&lt;/a>，对比以前的选型主要是Vite + Antd5的组合，基础的框架能力如路由什么的都有了，更重要是Vite本地api mock的能力。&lt;/p>
&lt;p>后端放弃了熟悉的基于spring boot的Java选型，而是选择了自己基于Go搭建的一系列工具，跨平台交叉编译是一个主要原因，对于经常在 macOS、windows和linux之间切换的我来说成了刚需。而且经常要做一些小工具用Go的优势就更明显了。&lt;/p>
&lt;p>虽然前端水平拙劣，为了方便后期回忆，作为对自己进度的评估基线，还是贴两张图记录当前进展：&lt;/p>
&lt;p>&lt;img src="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/terminal.png"
width="1826"
height="1202"
srcset="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/terminal_hu04e8cfd68db35d786ca8a398aa352ac1_131816_480x0_resize_box_3.png 480w, /p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/terminal_hu04e8cfd68db35d786ca8a398aa352ac1_131816_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="364px"
> &lt;img src="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/deploy.jpg"
width="1351"
height="1600"
srcset="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/deploy_hua04dce96e9d4468b5f9b9a53ec0b8687_214547_480x0_resize_q75_box.jpg 480w, /p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/deploy_hua04dce96e9d4468b5f9b9a53ec0b8687_214547_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="84"
data-flex-basis="202px"
>&lt;/p>
&lt;p>其中右图取自于自己的一个&lt;a class="link" href="https://github.com/raoqu/deploy_go" target="_blank" rel="noopener"
>开源项目&lt;/a>，前端代码打包了，主要是开源后端项目，即使代码鄙陋，也暂不计划重构了。&lt;/p>
&lt;p>&lt;img src="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/excel.jpg"
width="1122"
height="1103"
srcset="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/excel_hud25073ea600a0e7b954ca7a35abd0e21_320406_480x0_resize_q75_box.jpg 480w, /p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/excel_hud25073ea600a0e7b954ca7a35abd0e21_320406_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="101"
data-flex-basis="244px"
> &lt;img src="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/imgback.jpg"
width="1500"
height="1791"
srcset="/p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/imgback_hu865a7409d88b053b3d578a84a36d9199_1220247_480x0_resize_q75_box.jpg 480w, /p/2024%E5%BC%80%E5%B9%B4%E7%AF%87/imgback_hu865a7409d88b053b3d578a84a36d9199_1220247_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="83"
data-flex-basis="201px"
>&lt;/p>
&lt;p>再就是基于近期基于开源的&lt;a class="link" href="https://github.com/ztjhz/BetterChatGPT" target="_blank" rel="noopener"
>BetterChatGPT&lt;/a>部署了一个私有的AI对话工具，主要是为方便不会翻墙的家人，为此又拿v2ray代码小改了几十行。&lt;/p>
&lt;p>以前不太注重移动端应用的开发技能，但是想到未来可能还得靠C端用户恰饭，那么uni-app和Flutter还是学起来。&lt;/p>
&lt;p>另一方面是全面拥抱AI，近期也在工作中推进AI应用的落地，每一个新的生产力时代都有不短的红利期，作为技术人应该在商业和趋势方面也要具有敏感性，从而尽早从工具人的泥沼中得以解脱。&lt;/p></description></item></channel></rss>